df$season_publication_first <- cut(df$yday_publication_first, breaks = c(0, 60, 152, 244, 335, 366),
labels = c("Зима", "Весна", "Лето", "Осень", "Зима"),
include.lowest = TRUE)
### Publishers ####
publishers <- cSplit_e(df, "publisher", sep = ";", type = "character", fill = 0, drop = TRUE) %>%
select(starts_with("publisher")) %>%
colSums(.) %>%
as.data.frame(.)
publishers$publisher <- substr(rownames(publishers),11,999)
rownames(publishers) <- NULL
publishers <- publishers[c(2,1)]
names(publishers) <- c("publisher","count")
# Remove leading/trailing whitespaces
publishers$publisher <- trimws(publishers$publisher)
# Remove ",<,>
publishers$publisher <- gsub('"|<|>', '', publishers$publisher)
# Remove round brackets and everything inside
publishers$publisher <- gsub("\\([^()]*\\)", "", publishers$publisher)
# Be careful - these are powerful regexes
###TODO Clean some more publishers here, please ###
publishers$publisher <- gsub("АиФ.+", "АиФ", publishers$publisher)
publishers$publisher[grepl("Коммерсант",publishers$publisher)] <- "Коммерсант"
publishers$publisher[grepl("РБК|RBC|РосБизнесКонсалтинг",publishers$publisher)] <- "РБК"
publishers$publisher[grepl("Московский комсомолец|Московский Комсомолец|МК", publishers$publisher)] <- "МК"
publishers$publisher[str_detect(publishers$publisher, "Вечерний Ставрополь")] <- "Вечерний Ставрополь"
publishers$publisher[str_detect(publishers$publisher, "Йошкар-Ола")] <- "Йошкар-Ола"
publishers$publisher[str_detect(publishers$publisher, "Невское время")] <- "Невское время"
publishers$publisher[str_detect(publishers$publisher, "ИНТЕР|Интер")] <- "Интер"
publishers$publisher[str_detect(publishers$publisher, "Слобода")] <- "Слобода"
publishers$publisher[str_detect(publishers$publisher, "Якутск вечерний|Якутск Вечерний")] <- "Якутск вечерний"
publishers$publisher[str_detect(publishers$publisher, "Трибуна")] <- "Трибуна"
publishers$publisher[str_detect(publishers$publisher, "Советская Молодежь|Советская молодежь")] <- "Советская молодежь"
publishers$publisher[str_detect(publishers$publisher, "Новая новгородская газета")] <- "Новая новгородская газета"
publishers$publisher[str_detect(publishers$publisher, "Нижегородские новости")] <- "Нижегородские новости"
publishers$publisher[str_detect(publishers$publisher, "Наше Время|Наше время")] <- "Наше время"
publishers$publisher[str_detect(publishers$publisher, "Молодой Коммунар|Молодой коммунар")] <- "Молодой коммунар"
publishers$publisher[str_detect(publishers$publisher, "Красный Север|Красный север")] <- "Красный север"
publishers$publisher[str_detect(publishers$publisher, "Краснодарские известия")] <- "Краснодарские известия"
publishers$publisher[str_detect(publishers$publisher, "Кабардино-Балкарская правда|Кабардино-балкарская правда")] <- "Кабардино-Балкарская правда"
publishers$publisher[str_detect(publishers$publisher, "Аресеньевские вести")] <- "Арсеньевские вести"
publishers$publisher[str_detect(publishers$publisher, "Вечерняя Казань")] <- "Вечерняя Казань"
publishers$publisher[str_detect(publishers$publisher, "Вятский наблюдатель")] <- "Вятский наблюдатель"
publishers$publisher[publishers$publisher == "Известия "] <- "Известия"
publishers$publisher[publishers$publisher == "Комсомольская правда "] <- "Комсомольская правда"
publishers$publisher[publishers$publisher == "Арсеньевские вести "] <- "Арсеньевские вести"
### ###
# Counts publishers
publishers <- publishers %>%
group_by(publisher) %>%
summarise(count = sum(count)) %>%
arrange(desc(count))
### Sanctions dummies
df$sanction[285] <- "уголовное дело"
df$sanction[286] <- "уголовное дело"
df$is_fired <- 0
df$is_wanted <- 0
df$is_case <- 0
df$is_seizure <- 0
df$is_justification <- 0
df$is_house_arrest <- 0
df$is_fired[str_detect(df$sanction, "увол|отстр")] <- 1
df$is_wanted[str_detect(df$sanction, "розыск")] <- 1
df$is_case[str_detect(df$sanction, "угол")] <- 1
df$is_seizure[str_detect(df$sanction, "пров|обыск")] <- 1
df$is_justification[str_detect(df$sanction, "оправд")] <- 1
df$is_house_arrest[str_detect(df$sanction, "подп")] <- 1
df$is_detention[str_detect(df$sanction, "страж|задер|арест")] <- 1
### Type of media ###
# AK: please, avoid naming objects like 'new4'. Name should be semantically useful -- like 'df_long_publishers'.
new4 <- unnest(df, publisher = strsplit(publisher, ";"))
new4$publisher <- tolower(new4$publisher)
new4$publisher <- gsub(' (pdf-версия)', '', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('(московский выпуск, pdf)', '(Москва)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" казань и татарстан', 'рбк. татарстан (rt.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" нижний новгород', 'рбк. нижний новгород (nn.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" новосибирск и сибирь', 'рбк. новосибирск (nsk.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('известия (московский выпуск)', 'известия', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('вечерка (томск)', 'вечерка thebest (томск)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('московский комсомолец', 'мк', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('коммерсант', 'коммерсантъ', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('rbc news', 'рбк. rbc news', new4$publisher, fixed = TRUE)
allsources <- read_delim("data/allsources.csv",
";", escape_double = FALSE, trim_ws = TRUE)
allsources$name <- tolower(allsources$name)
allsources$name <- gsub(" (pdf-версия)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" (pdf версия)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" (архив)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" архив", "", allsources$name, fixed = TRUE)
new4$type <- NA
# AK: avoid using numbers as endpoints in cycles. It's better with nrow/length -- so you code will be more reusable and clear.
#for(i in 1:3514){
for(i in 1:nrow(allsources)){
new4$type[str_detect(new4$publisher,allsources$name[i])] <- allsources$type[i]
}
# AK: These two lines should be moved into 1_analysis.r
# also don't be shy to add comments to tell what these numbers mean
sum(is.na(new4$type))
unique(new4$publisher[is.na(new4$type)])
# AK: what are 'fed arch', 'fed', 'fed int' and so on? Again, in future write it here, in comments.
new4$type[is.na(new4$type)] <- "region"
new4$fed_arch <- 0
new4$fed <- 0
new4$fed_int <- 0
new4$region <- 0
new4$region_arch <- 0
new4$fed_arch[new4$type == "fed arch"] <- 1
new4$fed[new4$type == "fed"] <- 1
new4$fed_int[new4$type == "fed int"] <- 1
new4$region[new4$type == "region"] <- 1
new4$region_arch[new4$type == "region arch"] <- 1
types <- select(new4, N, fed, fed_int, fed_arch, region, region_arch)
types <- aggregate(. ~ N, types, sum)
df <- merge(df, types)
# AK: good practice is to delete unnecessary objects from memory:
rm(list = c("new4","types","allsources", "i"))
### Articles from Criminal Code ####
# There are some mistakes
df$articles[18] <- "300003; 1590003"
df$articles[19] <- "300003; 1590003"
df$articles <- gsub(',', ';', df$articles)
df_long_articles <- unnest(df, articles = strsplit(articles, ";"))
df_long_articles$articles <- gsub('\n| ', '', df_long_articles$articles)
df_long_articles$articles_short <- substr(df_long_articles$articles, 0, 3)
# Export data
save(df_long_articles, df, publishers, file = "data/data_clean.RData")
#write.csv2(df, "data/data_clean.csv", row.names = F)
df
?df
df_drugcrimes <- df
# Export data
save(df_long_articles, df_drugcrimes, publishers, file = "data/data_clean.RData")
df <- load("data/data_clean.RData")
library(readr)
library(splitstackshape)
library(dplyr)
library(stringr)
library(tidyr)
drugcrimes <- read_csv("data/data_30.06.2018.csv")
## Data cleaning
### Agencies ####
drugcrimes$agency_crime[drugcrimes$agency_crime %in% c("ОМВД","ОМОН")] <- "МВД"
drugcrimes$agency_crime[drugcrimes$agency_crime %in% c("УФСКН")] <- "ФСКН"
drugcrimes$agency_catcher[drugcrimes$agency_catcher %in% c("УСБ МВД","СБ МВД", "ОБНОН")] <- "МВД"
drugcrimes$agency_catcher[drugcrimes$agency_catcher %in% c("СКР")] <- "СК"
drugcrimes$agency_catcher[drugcrimes$agency_catcher %in% c("УФСКН")] <- "ФСКН"
drugcrimes$agency_catcher[drugcrimes$agency_catcher %in% c("УФСБ")] <- "ФСБ"
### Drugs ####
drugcrimes$drugs_seized_1[drugcrimes$drugs_seized_1 %in% c("марихуана","гашиш", "конопля","каннабис","мариухана",
"каннабиноид", "каннабиноиды")] <- "каннабиоиды"
### Regions ####
drugcrimes$agency_geo_region[drugcrimes$agency_geo_region == "Кабардино-Балкарская республика"] <- "Кабардино-Балкарская Республика"
drugcrimes$agency_geo_region[drugcrimes$agency_geo_region == "Респбулика Башкортостан"] <- "Республика Башкортостан"
drugcrimes$agency_geo_region[drugcrimes$agency_geo_region %in% c("Респубика Дагестан","Респбулика Дагестан")] <- "Республика Дагестан"
drugcrimes$agency_geo_region[drugcrimes$agency_geo_region == "Удмурстская Республика"] <- "Удмуртская Республика"
drugcrimes$agency_geo_region[drugcrimes$agency_geo_region == "Томбовская область"] <- "Тамбовская область"
### Dates ####
drugcrimes$date_publication_first <- substr(drugcrimes$date_publication,1,10)
drugcrimes$year_publication_first <- format(as.Date(drugcrimes$date_publication_first, format="%d.%m.%Y"),"%Y")
drugcrimes$month_publication_first <- format(as.Date(drugcrimes$date_publication_first, format="%d.%m.%Y"),"%m")
drugcrimes$yday_publication_first <- as.numeric(strftime(as.Date(drugcrimes$date_publication_first, format="%d.%m.%Y"), format = "%j"))
drugcrimes$season_publication_first <- cut(drugcrimes$yday_publication_first, breaks = c(0, 60, 152, 244, 335, 366),
labels = c("Зима", "Весна", "Лето", "Осень", "Зима"),
include.lowest = TRUE)
### Publishers ####
publishers <- cSplit_e(drugcrimes, "publisher", sep = ";", type = "character", fill = 0, drop = TRUE) %>%
select(starts_with("publisher")) %>%
colSums(.) %>%
as.data.frame(.)
publishers$publisher <- substr(rownames(publishers),11,999)
rownames(publishers) <- NULL
publishers <- publishers[c(2,1)]
names(publishers) <- c("publisher","count")
# Remove leading/trailing whitespaces
publishers$publisher <- trimws(publishers$publisher)
# Remove ",<,>
publishers$publisher <- gsub('"|<|>', '', publishers$publisher)
# Remove round brackets and everything inside
publishers$publisher <- gsub("\\([^()]*\\)", "", publishers$publisher)
# Be careful - these are powerful regexes
###TODO Clean some more publishers here, please ###
publishers$publisher <- gsub("АиФ.+", "АиФ", publishers$publisher)
publishers$publisher[grepl("Коммерсант",publishers$publisher)] <- "Коммерсант"
publishers$publisher[grepl("РБК|RBC|РосБизнесКонсалтинг",publishers$publisher)] <- "РБК"
publishers$publisher[grepl("Московский комсомолец|Московский Комсомолец|МК", publishers$publisher)] <- "МК"
publishers$publisher[str_detect(publishers$publisher, "Вечерний Ставрополь")] <- "Вечерний Ставрополь"
publishers$publisher[str_detect(publishers$publisher, "Йошкар-Ола")] <- "Йошкар-Ола"
publishers$publisher[str_detect(publishers$publisher, "Невское время")] <- "Невское время"
publishers$publisher[str_detect(publishers$publisher, "ИНТЕР|Интер")] <- "Интер"
publishers$publisher[str_detect(publishers$publisher, "Слобода")] <- "Слобода"
publishers$publisher[str_detect(publishers$publisher, "Якутск вечерний|Якутск Вечерний")] <- "Якутск вечерний"
publishers$publisher[str_detect(publishers$publisher, "Трибуна")] <- "Трибуна"
publishers$publisher[str_detect(publishers$publisher, "Советская Молодежь|Советская молодежь")] <- "Советская молодежь"
publishers$publisher[str_detect(publishers$publisher, "Новая новгородская газета")] <- "Новая новгородская газета"
publishers$publisher[str_detect(publishers$publisher, "Нижегородские новости")] <- "Нижегородские новости"
publishers$publisher[str_detect(publishers$publisher, "Наше Время|Наше время")] <- "Наше время"
publishers$publisher[str_detect(publishers$publisher, "Молодой Коммунар|Молодой коммунар")] <- "Молодой коммунар"
publishers$publisher[str_detect(publishers$publisher, "Красный Север|Красный север")] <- "Красный север"
publishers$publisher[str_detect(publishers$publisher, "Краснодарские известия")] <- "Краснодарские известия"
publishers$publisher[str_detect(publishers$publisher, "Кабардино-Балкарская правда|Кабардино-балкарская правда")] <- "Кабардино-Балкарская правда"
publishers$publisher[str_detect(publishers$publisher, "Аресеньевские вести")] <- "Арсеньевские вести"
publishers$publisher[str_detect(publishers$publisher, "Вечерняя Казань")] <- "Вечерняя Казань"
publishers$publisher[str_detect(publishers$publisher, "Вятский наблюдатель")] <- "Вятский наблюдатель"
publishers$publisher[publishers$publisher == "Известия "] <- "Известия"
publishers$publisher[publishers$publisher == "Комсомольская правда "] <- "Комсомольская правда"
publishers$publisher[publishers$publisher == "Арсеньевские вести "] <- "Арсеньевские вести"
### ###
# Counts publishers
publishers <- publishers %>%
group_by(publisher) %>%
summarise(count = sum(count)) %>%
arrange(desc(count))
### Sanctions dummies
drugcrimes$sanction[285] <- "уголовное дело"
drugcrimes$sanction[286] <- "уголовное дело"
drugcrimes$is_fired <- 0
drugcrimes$is_wanted <- 0
drugcrimes$is_case <- 0
drugcrimes$is_seizure <- 0
drugcrimes$is_justification <- 0
drugcrimes$is_house_arrest <- 0
drugcrimes$is_fired[str_detect(drugcrimes$sanction, "увол|отстр")] <- 1
drugcrimes$is_wanted[str_detect(drugcrimes$sanction, "розыск")] <- 1
drugcrimes$is_case[str_detect(drugcrimes$sanction, "угол")] <- 1
drugcrimes$is_seizure[str_detect(drugcrimes$sanction, "пров|обыск")] <- 1
drugcrimes$is_justification[str_detect(drugcrimes$sanction, "оправд")] <- 1
drugcrimes$is_house_arrest[str_detect(drugcrimes$sanction, "подп")] <- 1
drugcrimes$is_detention[str_detect(drugcrimes$sanction, "страж|задер|арест")] <- 1
### Type of media ###
# AK: please, avoid naming objects like 'new4'. Name should be semantically useful -- like 'drugcrimes_long_publishers'.
new4 <- unnest(drugcrimes, publisher = strsplit(publisher, ";"))
new4$publisher <- tolower(new4$publisher)
new4$publisher <- gsub(' (pdrugcrimes-версия)', '', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('(московский выпуск, pdrugcrimes)', '(Москва)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" казань и татарстан', 'рбк. татарстан (rt.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" нижний новгород', 'рбк. нижний новгород (nn.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" новосибирск и сибирь', 'рбк. новосибирск (nsk.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('известия (московский выпуск)', 'известия', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('вечерка (томск)', 'вечерка thebest (томск)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('московский комсомолец', 'мк', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('коммерсант', 'коммерсантъ', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('rbc news', 'рбк. rbc news', new4$publisher, fixed = TRUE)
allsources <- read_delim("data/allsources.csv",
";", escape_double = FALSE, trim_ws = TRUE)
allsources$name <- tolower(allsources$name)
allsources$name <- gsub(" (pdrugcrimes-версия)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" (pdrugcrimes версия)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" (архив)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" архив", "", allsources$name, fixed = TRUE)
new4$type <- NA
# AK: avoid using numbers as endpoints in cycles. It's better with nrow/length -- so you code will be more reusable and clear.
#for(i in 1:3514){
for(i in 1:nrow(allsources)){
new4$type[str_detect(new4$publisher,allsources$name[i])] <- allsources$type[i]
}
# AK: These two lines should be moved into 1_analysis.r
# also don't be shy to add comments to tell what these numbers mean
sum(is.na(new4$type))
unique(new4$publisher[is.na(new4$type)])
# AK: what are 'fed arch', 'fed', 'fed int' and so on? Again, in future write it here, in comments.
new4$type[is.na(new4$type)] <- "region"
new4$fed_arch <- 0
new4$fed <- 0
new4$fed_int <- 0
new4$region <- 0
new4$region_arch <- 0
new4$fed_arch[new4$type == "fed arch"] <- 1
new4$fed[new4$type == "fed"] <- 1
new4$fed_int[new4$type == "fed int"] <- 1
new4$region[new4$type == "region"] <- 1
new4$region_arch[new4$type == "region arch"] <- 1
types <- select(new4, N, fed, fed_int, fed_arch, region, region_arch)
types <- aggregate(. ~ N, types, sum)
drugcrimes <- merge(drugcrimes, types)
# AK: good practice is to delete unnecessary objects from memory:
rm(list = c("new4","types","allsources", "i"))
### Articles from Criminal Code ####
# There are some mistakes
drugcrimes$articles[18] <- "300003; 1590003"
drugcrimes$articles[19] <- "300003; 1590003"
drugcrimes$articles <- gsub(',', ';', drugcrimes$articles)
drugcrimes_long_articles <- unnest(drugcrimes, articles = strsplit(articles, ";"))
drugcrimes_long_articles$articles <- gsub('\n| ', '', drugcrimes_long_articles$articles)
drugcrimes_long_articles$articles_short <- substr(drugcrimes_long_articles$articles, 0, 3)
# Export data
save(drugcrimes_long_articles, publishers, file = "data/drugcrimes.RData")
#write.csv2(drugcrimes, "data/data_clean.csv", row.names = F)
df <- load("data/data_clean.RData")
library(readr)
library(splitstackshape)
library(dplyr)
library(stringr)
library(tidyr)
df <- read_csv("data/data_30.06.2018.csv")
## Data cleaning
### Agencies ####
df$agency_crime[df$agency_crime %in% c("ОМВД","ОМОН")] <- "МВД"
df$agency_crime[df$agency_crime %in% c("УФСКН")] <- "ФСКН"
df$agency_catcher[df$agency_catcher %in% c("УСБ МВД","СБ МВД", "ОБНОН")] <- "МВД"
df$agency_catcher[df$agency_catcher %in% c("СКР")] <- "СК"
df$agency_catcher[df$agency_catcher %in% c("УФСКН")] <- "ФСКН"
df$agency_catcher[df$agency_catcher %in% c("УФСБ")] <- "ФСБ"
### Drugs ####
df$drugs_seized_1[df$drugs_seized_1 %in% c("марихуана","гашиш", "конопля","каннабис","мариухана",
"каннабиноид", "каннабиноиды")] <- "каннабиоиды"
### Regions ####
df$agency_geo_region[df$agency_geo_region == "Кабардино-Балкарская республика"] <- "Кабардино-Балкарская Республика"
df$agency_geo_region[df$agency_geo_region == "Респбулика Башкортостан"] <- "Республика Башкортостан"
df$agency_geo_region[df$agency_geo_region %in% c("Респубика Дагестан","Респбулика Дагестан")] <- "Республика Дагестан"
df$agency_geo_region[df$agency_geo_region == "Удмурстская Республика"] <- "Удмуртская Республика"
df$agency_geo_region[df$agency_geo_region == "Томбовская область"] <- "Тамбовская область"
### Dates ####
df$date_publication_first <- substr(df$date_publication,1,10)
df$year_publication_first <- format(as.Date(df$date_publication_first, format="%d.%m.%Y"),"%Y")
df$month_publication_first <- format(as.Date(df$date_publication_first, format="%d.%m.%Y"),"%m")
df$yday_publication_first <- as.numeric(strftime(as.Date(df$date_publication_first, format="%d.%m.%Y"), format = "%j"))
df$season_publication_first <- cut(df$yday_publication_first, breaks = c(0, 60, 152, 244, 335, 366),
labels = c("Зима", "Весна", "Лето", "Осень", "Зима"),
include.lowest = TRUE)
### Publishers ####
publishers <- cSplit_e(df, "publisher", sep = ";", type = "character", fill = 0, drop = TRUE) %>%
select(starts_with("publisher")) %>%
colSums(.) %>%
as.data.frame(.)
publishers$publisher <- substr(rownames(publishers),11,999)
rownames(publishers) <- NULL
publishers <- publishers[c(2,1)]
names(publishers) <- c("publisher","count")
# Remove leading/trailing whitespaces
publishers$publisher <- trimws(publishers$publisher)
# Remove ",<,>
publishers$publisher <- gsub('"|<|>', '', publishers$publisher)
# Remove round brackets and everything inside
publishers$publisher <- gsub("\\([^()]*\\)", "", publishers$publisher)
# Be careful - these are powerful regexes
###TODO Clean some more publishers here, please ###
publishers$publisher <- gsub("АиФ.+", "АиФ", publishers$publisher)
publishers$publisher[grepl("Коммерсант",publishers$publisher)] <- "Коммерсант"
publishers$publisher[grepl("РБК|RBC|РосБизнесКонсалтинг",publishers$publisher)] <- "РБК"
publishers$publisher[grepl("Московский комсомолец|Московский Комсомолец|МК", publishers$publisher)] <- "МК"
publishers$publisher[str_detect(publishers$publisher, "Вечерний Ставрополь")] <- "Вечерний Ставрополь"
publishers$publisher[str_detect(publishers$publisher, "Йошкар-Ола")] <- "Йошкар-Ола"
publishers$publisher[str_detect(publishers$publisher, "Невское время")] <- "Невское время"
publishers$publisher[str_detect(publishers$publisher, "ИНТЕР|Интер")] <- "Интер"
publishers$publisher[str_detect(publishers$publisher, "Слобода")] <- "Слобода"
publishers$publisher[str_detect(publishers$publisher, "Якутск вечерний|Якутск Вечерний")] <- "Якутск вечерний"
publishers$publisher[str_detect(publishers$publisher, "Трибуна")] <- "Трибуна"
publishers$publisher[str_detect(publishers$publisher, "Советская Молодежь|Советская молодежь")] <- "Советская молодежь"
publishers$publisher[str_detect(publishers$publisher, "Новая новгородская газета")] <- "Новая новгородская газета"
publishers$publisher[str_detect(publishers$publisher, "Нижегородские новости")] <- "Нижегородские новости"
publishers$publisher[str_detect(publishers$publisher, "Наше Время|Наше время")] <- "Наше время"
publishers$publisher[str_detect(publishers$publisher, "Молодой Коммунар|Молодой коммунар")] <- "Молодой коммунар"
publishers$publisher[str_detect(publishers$publisher, "Красный Север|Красный север")] <- "Красный север"
publishers$publisher[str_detect(publishers$publisher, "Краснодарские известия")] <- "Краснодарские известия"
publishers$publisher[str_detect(publishers$publisher, "Кабардино-Балкарская правда|Кабардино-балкарская правда")] <- "Кабардино-Балкарская правда"
publishers$publisher[str_detect(publishers$publisher, "Аресеньевские вести")] <- "Арсеньевские вести"
publishers$publisher[str_detect(publishers$publisher, "Вечерняя Казань")] <- "Вечерняя Казань"
publishers$publisher[str_detect(publishers$publisher, "Вятский наблюдатель")] <- "Вятский наблюдатель"
publishers$publisher[publishers$publisher == "Известия "] <- "Известия"
publishers$publisher[publishers$publisher == "Комсомольская правда "] <- "Комсомольская правда"
publishers$publisher[publishers$publisher == "Арсеньевские вести "] <- "Арсеньевские вести"
### ###
# Counts publishers
publishers <- publishers %>%
group_by(publisher) %>%
summarise(count = sum(count)) %>%
arrange(desc(count))
### Sanctions dummies
df$sanction[285] <- "уголовное дело"
df$sanction[286] <- "уголовное дело"
df$is_fired <- 0
df$is_wanted <- 0
df$is_case <- 0
df$is_seizure <- 0
df$is_justification <- 0
df$is_house_arrest <- 0
df$is_fired[str_detect(df$sanction, "увол|отстр")] <- 1
df$is_wanted[str_detect(df$sanction, "розыск")] <- 1
df$is_case[str_detect(df$sanction, "угол")] <- 1
df$is_seizure[str_detect(df$sanction, "пров|обыск")] <- 1
df$is_justification[str_detect(df$sanction, "оправд")] <- 1
df$is_house_arrest[str_detect(df$sanction, "подп")] <- 1
df$is_detention[str_detect(df$sanction, "страж|задер|арест")] <- 1
### Type of media ###
# AK: please, avoid naming objects like 'new4'. Name should be semantically useful -- like 'df_long_publishers'.
new4 <- unnest(df, publisher = strsplit(publisher, ";"))
new4$publisher <- tolower(new4$publisher)
new4$publisher <- gsub(' (pdf-версия)', '', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('(московский выпуск, pdf)', '(Москва)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" казань и татарстан', 'рбк. татарстан (rt.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" нижний новгород', 'рбк. нижний новгород (nn.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('риа "росбизнесконсалтинг" новосибирск и сибирь', 'рбк. новосибирск (nsk.rbc.ru)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('известия (московский выпуск)', 'известия', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('вечерка (томск)', 'вечерка thebest (томск)', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('московский комсомолец', 'мк', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('коммерсант', 'коммерсантъ', new4$publisher, fixed = TRUE)
new4$publisher <- gsub('rbc news', 'рбк. rbc news', new4$publisher, fixed = TRUE)
allsources <- read_delim("data/allsources.csv",
";", escape_double = FALSE, trim_ws = TRUE)
allsources$name <- tolower(allsources$name)
allsources$name <- gsub(" (pdf-версия)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" (pdf версия)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" (архив)", "", allsources$name, fixed = TRUE)
allsources$name <- gsub(" архив", "", allsources$name, fixed = TRUE)
new4$type <- NA
# AK: avoid using numbers as endpoints in cycles. It's better with nrow/length -- so you code will be more reusable and clear.
#for(i in 1:3514){
for(i in 1:nrow(allsources)){
new4$type[str_detect(new4$publisher,allsources$name[i])] <- allsources$type[i]
}
# AK: These two lines should be moved into 1_analysis.r
# also don't be shy to add comments to tell what these numbers mean
sum(is.na(new4$type))
unique(new4$publisher[is.na(new4$type)])
# AK: what are 'fed arch', 'fed', 'fed int' and so on? Again, in future write it here, in comments.
new4$type[is.na(new4$type)] <- "region"
new4$fed_arch <- 0
new4$fed <- 0
new4$fed_int <- 0
new4$region <- 0
new4$region_arch <- 0
new4$fed_arch[new4$type == "fed arch"] <- 1
new4$fed[new4$type == "fed"] <- 1
new4$fed_int[new4$type == "fed int"] <- 1
new4$region[new4$type == "region"] <- 1
new4$region_arch[new4$type == "region arch"] <- 1
types <- select(new4, N, fed, fed_int, fed_arch, region, region_arch)
types <- aggregate(. ~ N, types, sum)
df <- merge(df, types)
# AK: good practice is to delete unnecessary objects from memory:
rm(list = c("new4","types","allsources", "i"))
### Articles from Criminal Code ####
# There are some mistakes
df$articles[18] <- "300003; 1590003"
df$articles[19] <- "300003; 1590003"
df$articles <- gsub(',', ';', df$articles)
df_long_articles <- unnest(df, articles = strsplit(articles, ";"))
df_long_articles$articles <- gsub('\n| ', '', df_long_articles$articles)
df_long_articles$articles_short <- substr(df_long_articles$articles, 0, 3)
# Export data
save(df_long_articles, df, publishers, file = "data/data_clean.RData")
#write.csv2(df, "data/data_clean.csv", row.names = F)
load("data/data_clean.RData")
ggplot(df, aes(x = yday_publication_first))+
geom_histogram(bins = 52) +
geom_vline(xintercept = c(60,152,244,335))+
theme_minimal() +
scale_x_continuous(name="Сезон публикации новости",breaks = c(31,106,198,290,351), labels = c("Зима","Весна","Лето","Осень","Зима"))
table(df$season_publication_first)
Sys.Date()
as.data.frame(table(df$season_publication_first))
t
?t
str(t)
class(T)
class(t)
T
?T
str(T)
T
typeof(T)
typeof(t)
closure
?closure
tab <- as.data.frame(table(df$season_publication_first))
View(tab)
View(tab)
names(tab) <- c("Время года","Количество новостных сообщений")
library(knitr)
opts_knit
?opts_knit
str(knitr::opts_knit$get())
eval(parse("./code/0_prepare_data.R", encoding = "UTF-8"))
# Paper
library(rmarkdown)
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
install.packages("captioner")
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
table1
table_n
?captioner
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
View(df)
render("./code/1_paper.Rmd",
output_dir = "./results/", output_file = paste0("paper_draft_",Sys.Date(),".docx"),
encoding = "UTF-8", quiet = T, clean = T, envir = new.env())
